---
#####################
# Site config for site2

#####################
# site: instance of service e.g. zbilling for production in zhdk; sbilling for staging in unil

site: "site2"
os_cli_server: "os.site2"

#####################
# SWITCHengines project (tenant)

os_project: "my_project1"
os_region: "LS"

#####################
# networks
os_network_name: "{{site}}"
ipv6_cidr: "2001:620:5ca1:2e4::/64"
ipv4_cidr: "10.0.102.0/24"
os_network:
  - name: "{{os_network_name}}"
    cidr: 
      - "{{ ipv4_cidr }}"
      - "{{ ipv6_cidr }}"

os_jump_ip: "86.119.30.214"

#####################
# security groups (optional)

os_purge_security_group: "yes"
os_security_group:
  - name: "{{site}}-ssh"
    description: "ssh access"
    rules:
      - { ethertype: "IPv4", protocol: "tcp", port_range_min: "22", port_range_max: "22", remote_ip_prefix: "0.0.0.0/0", state: "present" }
      - { ethertype: "IPv6", protocol: "tcp", port_range_min: "22", port_range_max: "22", remote_ip_prefix: "::/0", state: "present" }

#####################
# server groups  (optional)
os_purge_server_group: "yes"
os_server_group:
  list:
    - { name: "server_group1", policies: ['anti-affinity'] }
  # look up id after they were created: `openstack server group list`
  server_group1: "c489e94f-0c1a-40c1-a979-a897fcc6db88"


#####################
# servers
server_name_prefix: ""

sample_userdata: |
  {%- raw -%}#!/bin/bash
  echo "hello world" > /hello
  {% endraw %}

os_server:
  myserver1.site2: { host_number: "10", network: ["{{os_network_name}}"], flavor: "c1.small", image: "{{os_image['xenial']}}", root_size: "20", security_groups: "{{site}}-ssh", hints: {group: "{{ os_server_group['server_group1'] }}"}, floating_ip: '{{os_jump_ip}}' }
  myserver2.site2: { host_number: "11", network: ["{{os_network_name}}"], flavor: "c1.small", image: "{{os_image['xenial']}}", root_size: "20", security_groups: "{{site}}-ssh", hints: {group: "{{ os_server_group['server_group1'] }}"}, userdata: "{{ sample_userdata }}" }


#####################
# ceph data volumes; do not add root volumes and ssd-ephemeral volumes.
os_purge_data_volume: "yes"
os_volumes:
  # name is the mount point, "name_prefix-name" is the name the volume gets in cinder
  myserver1.site2:
    - { name: "data", name_prefix: "data", state: "mounted", device: "/dev/vdb", size: "10", fs: "xfs", owner: "root", group: "root", mode: "0755" }

#####################
# vip
os_purge_vip: "yes"

server_group1_vip: "{{ipv4_prefix}}.100"


vip_ip_lists:
  master_vip: 
    - "{{ipv4_cidr| ipaddr('100')}}"
    - "{{ipv6_cidr| ipaddr('100')}}"

os_vip:
  vip_ports: # ports are needed for floating ip assignement. This is an ipv4 only thing
    - { name: "master_vip", ips: "{{ vip_ip_lists.master_vip }}" }
  vm_ports: # ports of VMs that need to be patched with allowed_address_pairs info
    myserver1.site2: "{{ lookup('flattened', vip_ip_lists.master_vip).split(',') }}"
    myserver2.site2: "{{ lookup('flattened', vip_ip_lists.master_vip).split(',') }}"
